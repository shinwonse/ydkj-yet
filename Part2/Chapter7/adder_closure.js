function adder(num1) {
  return function addTo(num2) {
    return num1 + num2;
  }
}

var addTo10 = adder(10);
var addTo42 = adder(42);

addTo10(15); // 25
addTo42(9); // 51

/**
 * 클로저는 단순히 함수의 코드에 의해 정의(단일 렉시컬 정의)되는게 아니라 함수 인스턴스에 따라 다르게 생성됩니다.
 * 
 * 외부 함수 adder()가 실행될 때마다 내부 함수 addTo()의 새로운 인스턴스가 생성되고, 새로운 인스턴스에는
 * 새로운 클로저가 생성됩니다. 즉, 각 내부 함수 인스턴스는 adder()를 실행할 때의 변수의 환경을 기억해
 * 각자 자신만의 독립적인 클로저를 갖게 되는 거죠.
 * 
 * 클로저는 렉시컬 스코프에 기반을 두고 있고 컴파일 시 처리되긴 하지만, 실제로 클로저의 동작은
 * 실행 시점에 함수 인스턴스에 따라 달라지는 특성이라 생각하면 됩니다.
 */